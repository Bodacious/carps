#!/usr/local/bin/ruby
# Copyright 2010 John Morrice

# This file is part of CARPS.

# CARPS is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# CARPS is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with CARPS.  If not, see <http://www.gnu.org/licenses/>.

require "optparse"

require "carps"

include CARPS

# Set up the email
def setup_email parser, session
   config = EmailConfig.load
   config.connect!
   config.mailer parser, session
end

# Launch a CARPS session for a given role
def play_role config, role
   wizard = role::Wizard.new
   if wizard.first_time?
      wizard.create_files
      wizard.create_directories
      config = true
   end
   if config
      wizard.run
   else
      CARPS::init
      session = SessionManager.new
      mailer = setup_email role::parser, session
      role::StartInterface.start_game_interface mailer, role::GameConfig, session
   end
end

# Run CARPS
def carps
   # The user is a player
   player = false
   # The user is a dungeon master
   dm = false
   # Configure CARPS
   config = false

   opts = OptionParser.new do |opts|

      opts.banner = "Usage: carps [OPTION]"

      opts.separator ""
      opts.separator "Game options:"

      opts.on "-p", "--player", "Play a game." do
         player = true
      end

      opts.on "-m", "--master", "Host a game." do
         dm = true
      end

      opts.separator ""
      opts.separator "Other options:"

      opts.on "-w", "--wizard", "Use this option to configure your settings.  Use with either --master or --player." do
         config = true
      end

      opts.on "-h", "--help", "Print help." do
         puts opts
         exit
      end

      opts.on "-v", "--version", "Print version number." do
         puts VERSION
         exit
      end
   end

   begin
      opts.parse! ARGV
   rescue StandardError => e
      puts e.to_s
      puts opts
      exit 1
   end


   if player and not dm
      CARPS::config_dir "player"
      play_role config, Player

   elsif dm and not player
      CARPS::config_dir "dm"
      play_role config, DM
   else
      puts opts
      exit 1
   end
end


# Run CARPS, emitting a nice crash report if it fails
CARPS::with_crash_report do
   carps
end
